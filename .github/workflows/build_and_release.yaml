name: Build/release

on:
    push:
        tags: [v*]

permissions:
    contents: write # Required for creating releases

jobs:
    release:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os:
                    # - macos-latest
                    - ubuntu-latest

        steps:
            - name: Check out Git repository
              uses: actions/checkout@v1

            - name: Install Node.js, NPM
              uses: actions/setup-node@v1
              with:
                  node-version: 22

            - name: Install canvas dependencies (macOS)
              if: startsWith(matrix.os, 'macos')
              run: brew install pkg-config cairo pango libpng jpeg giflib librsvg pixman python-setuptools

            - name: Install canvas dependencies (Ubuntu)
              if: startsWith(matrix.os, 'ubuntu')
              run: |
                  sudo apt-get update && sudo apt-get install -y \
                  build-essential \
                  libcairo2-dev \
                  libpango1.0-dev \
                  libjpeg-dev \
                  libgif-dev \
                  librsvg2-dev \
                  libgtk-3-dev \
                  libwebkit2gtk-4.0-dev \
                  libgconf-2-4

            - name: Set up Wine for Windows build (Ubuntu)
              if: startsWith(matrix.os, 'ubuntu')
              run: |
                  sudo dpkg --add-architecture i386
                  sudo apt-get update
                  sudo apt-get install -y \
                    software-properties-common \
                    wine64 \
                    wine32 \
                    winbind \
                    xvfb
                  # Verify Wine installation
                  wine --version

            - name: Prepare for app notarization
              if: startsWith(matrix.os, 'macos')
              run: |
                  mkdir -p ~/private_keys/
                  echo '${{ secrets.apple_api_key }}' > ~/private_keys/apple_api_key.p8

            - name: Build/release Electron app
              uses: OpenMarch/builder@v2
              with:
                  # GitHub token, automatically provided to the action
                  # (No need to define this secret in the repo settings)
                  github_token: ${{ secrets.github_token }}

                  # If the commit is tagged with a version (e.g. "v1.0.0"), release the app after building
                  release: ${{ startsWith(github.ref, 'refs/tags/v') }}
                  mac_certs: ${{ secrets.mac_certs }}
                  mac_certs_password: ${{ secrets.mac_certs_password }}
              env:
                  # Not needed since not building on windows
                  # PKG_CONFIG_PATH: "C:\\msys64\\mingw64\\lib\\pkgconfig"
                  APPLE_API_KEY: "~/private_keys/apple_api_key.p8"
                  APPLE_API_KEY_ID: ${{ secrets.apple_api_key_id }}
                  APPLE_API_ISSUER: ${{ secrets.apple_api_key_issuer }}
                  # also put in camelCase for electron/notarize
                  appleApiKey: "~/private_keys/apple_api_key.p8"
                  appleApiKeyId: ${{ secrets.apple_api_key_id }}
                  appleApiIssuer: ${{ secrets.apple_api_key_issuer }}
                  # For releasing, no need to add to secrets
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
